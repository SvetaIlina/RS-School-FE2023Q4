@import './_global.scss';

.wrapper {
  max-width: 1200px;
  margin: 0 auto;
}

.header {
  position: sticky;
  top: 10px;
  background: $bg-color;
  display: flex;
  justify-content: space-evenly;
}

.btn,
.instruction-link {
  font-family: 'Shippori Mincho', serif;
  font-weight: 800;
  text-align: center;
  padding: 5px 10px;
  color: $text-color;
  text-shadow: 1px -1px 1px black;
  font-size: 2.1rem;
}

.instruction-link,
.header .btn {
  transition: all 0.5s;
  &:hover {
    color: #eb7b95;
  }
}

.screen {
  @include flexC;
  height: 100vh;
  transition: margin 0.5s ease-out;
  justify-content: center;
  align-items: center;
  gap: 40px;
  &.up {
    margin-top: -100vh;
  }
  .btn {
    width: 295px;
    border: 3px solid $text-color;
    box-shadow: inset 0 0 20px $text-color;
    transition: all 0.6s;
    &:hover {
      box-shadow: inset 15px 15px 40px $text-color;
    }
    @media (max-width: 768px) {
      width: 200px;
    }
  }
}

.game {
  flex-direction: row;
  justify-content: space-evenly;
  @media (max-width: 1000px) {
    padding-top: 70px;
    flex-wrap: wrap;
    column-gap: 100px;
    row-gap: 0px;
    align-items: flex-start;
  }
  @media (max-width: 830px) {
    column-gap: 40px;
  }
  @media (max-width: 690px) {
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 30px;
  }
}

h1 {
  font-size: 12rem;
  text-shadow: 4px -2px 4px black;
  @media (max-width: 500px) {
    font-size: 9rem;
  }
}

.timer {
  font-size: 3.5rem;
  display: flex;
  justify-content: center;

  &__item {
    width: 40px;
  }
  @media (max-width: 1000px) {
    order: -1;
    width: 100%;
  }
  @media (max-width: 690px) {
    order: 0;
  }
}

#min,
#sec {
  position: relative;
  margin-left: 5px;

  &::before {
    content: ':';
    position: absolute;
    bottom: 4px;
    right: 40px;
  }
}

.game-control {
  @include flexC;
  gap: 40px;
  @media (max-width: 690px) {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
  }
  .btn {
    font-size: 1.8rem;
    width: 200px;
    @media (max-width: 768px) {
      width: 150px;
    }
    @media (max-width: 690px) {
      width: 100px;
    }
  }
}

#level-items {
  margin: auto;
  background: rgb(245, 237, 229);
  width: 400px;
  height: 400px;
  border: 3px solid $text-color;
  @media (max-width: 768px) {
    width: 300px;
  }
  &::backdrop {
    background: rgba(190, 190, 190, 0.5);
  }
}

.level__list {
  @include flexC;
  gap: 50px;
  align-items: center;
  margin-top: 20px;
}

.game-field {
  display: grid;
  grid-template-columns: repeat(3, auto);
  grid-template-rows: repeat(3, auto);
  grid-template-areas:
    '. top top'
    'left table table'
    'left table table';
  justify-items: center;
  align-items: center;
  gap: 1px;
  max-height: 500px;
  max-width: 500px;
  font-size: 1.5rem;
  @media (max-width: 690px) {
    order: 3;
  }
}

.top-hints,
.left-hints {
  background: $bg-color;
  border: $borderS;
  font-weight: 800;
}

.top-hints {
  grid-area: top;
  display: flex;
  .top-hint {
    min-height: 40px;
    @include flexC;
    border: $borderS;
    justify-content: end;
  }
}

.left-hints {
  @include flexC;
  grid-area: left;
  .left-hint {
    border: $borderS;
    min-width: 40px;
    padding: 0 3px;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 6px;
    justify-content: end;
  }
}

.hint {
  cursor: pointer;
  &--checked {
    opacity: 0.5;
  }
}

table {
  grid-area: table;
  margin: 0 auto;
  border-spacing: 0;
  border-collapse: collapse;
  border: $borderM;
  background: $bg-color;
}

.ceil {
  position: relative;
  border: $borderS;
  &--fill {
    background-color: rgb(26, 13, 13);
  }
  &--crossed {
    &::before,
    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 2px;
      background-color: #a83636;
      right: 0;
      transform: rotate(45deg);
    }
    &::after {
      transform: rotate(-45deg);
    }
  }
}

td:nth-child(5n + 5):not(:last-child) {
  border-right: $borderM;
}

tr:nth-child(5n + 5):not(:last-child) {
  border-bottom: $borderM;
}

@import './_dark.scss';
